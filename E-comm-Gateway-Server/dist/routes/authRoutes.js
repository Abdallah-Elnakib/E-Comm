"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const authLoginControllers_1 = require("../controllers/Auth-Server/authLoginControllers");
const authSignupController_1 = require("../controllers/Auth-Server/authSignupController");
const authGetUserByIdControllers_1 = require("../controllers/Auth-Server/authGetUserByIdControllers");
const authGetAllAddressController_1 = require("../controllers/Auth-Server/authGetAllAddressController");
const authDeleteAddressByAddressNumberControllers_1 = require("../controllers/Auth-Server/authDeleteAddressByAddressNumberControllers");
const authAddNewAddressController_1 = require("../controllers/Auth-Server/authAddNewAddressController");
const authUpdateAddressByIdControllers_1 = require("../controllers/Auth-Server/authUpdateAddressByIdControllers");
const authLogoutControllers_1 = require("../controllers/Auth-Server/authLogoutControllers");
const authSendOtpController_1 = require("../controllers/Auth-Server/authSendOtpController");
const authResendOtpControllers_1 = require("../controllers/Auth-Server/authResendOtpControllers");
const authVerifyOtpControllers_1 = require("../controllers/Auth-Server/authVerifyOtpControllers");
const authForgotPasswordControllers_1 = require("../controllers/Auth-Server/authForgotPasswordControllers");
const authResetPasswordControllers_1 = require("../controllers/Auth-Server/authResetPasswordControllers");
const authCheckUserControllers_1 = require("../controllers/Auth-Server/authCheckUserControllers");
const verifyJwt_1 = require("../middleware/verifyJwt");
const router = express_1.default.Router();
router.post('/login', authLoginControllers_1.loginUser);
router.post('/signup', authSignupController_1.signupUser);
router.get('/logout', authLogoutControllers_1.logout);
router.get('/check-user-auth', authCheckUserControllers_1.checkUser);
router.post("/forgot-password", authForgotPasswordControllers_1.forgotPassword);
router.post("/reset-password", authResetPasswordControllers_1.resetPassword);
router.use(verifyJwt_1.verifyJWT);
router.get('/user/:id', authGetUserByIdControllers_1.getUserById);
router.get('/address/get-all/:user_id', authGetAllAddressController_1.getAllAddress);
router.delete('/address/delete/:user_id', authDeleteAddressByAddressNumberControllers_1.deleteAddressByAddressNumber);
router.post('/address/add-address/:user_id', authAddNewAddressController_1.addNewAddress);
router.put('/address/update-address/:user_id', authUpdateAddressByIdControllers_1.updateAddress);
router.post('/send-otp', authSendOtpController_1.sendOtp);
router.post('/resend-otp', authResendOtpControllers_1.resendOtp);
router.post('/verify-otp', authVerifyOtpControllers_1.verifyOtp);
exports.default = router;
